name: Build and Test UCrypt Application

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # Job 1: Build the Java backend and upload the JAR file as an artifact
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build backend with Maven
        run: mvn -B package --file crypto-back/pom.xml -DskipTests

      - name: Find JAR file name
        id: find_jar
        run: echo "jar_path=$(find crypto-back/target -name '*.jar')" >> $GITHUB_OUTPUT

      - name: Upload backend artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: ${{ steps.find_jar.outputs.jar_path }}

  # Job 2: Build the Angular frontend and upload the 'dist' folder as an artifact
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Frontend Dependencies and Build
        run: |
          cd UCryptPortal
          npm install
          npm install -g @angular/cli@15.0.1
          ng build --configuration=docker

      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: UCryptPortal/dist/

  # Job 3: Run the automated Selenium tests using the built artifacts
  run-automated-tests:
    runs-on: ubuntu-latest
    # This job runs only after the backend and frontend builds are successful
    needs: [build-backend, build-frontend]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Download the artifacts that were uploaded by the build jobs
      - name: Download backend artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-jar
          path: crypto-back/target/

      - name: Download frontend artifact
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: UCryptPortal/dist/

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Now that artifacts are in place, build and start the Docker containers
      - name: Start services with Docker Compose
        run: docker-compose -f crypto-back/docker-compose-ci.yml up --build -d

      - name: Wait for services to be healthy
        run: |
          echo "Waiting for services to be ready..."
          # This simple delay gives the database and backend time to initialize.
          sleep 90

      - name: Run Selenium tests
        run: mvn -B test -f testing/pom.xml

      # This step will run even if the tests fail, ensuring you always get a report
      - name: Publish Test Report
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: 'testing/target/surefire-reports/TEST-*.xml'
